# docker compose for OpenSentry
# Build and run on Raspberry Pi (arm64). For cross-builds, uncomment platform.

services:
  opensentry:
    build:
      context: .
      dockerfile: Dockerfile
      # platform: linux/arm64    # uncomment if building on non-ARM host with buildx
    image: opensentry:pi
    container_name: opensentry
    ports:
      - "${OPENSENTRY_PORT:-5000}:${OPENSENTRY_PORT:-5000}"
    environment:
      # Change these defaults in production
      - OPENSENTRY_USER=admin
      - OPENSENTRY_PASS=admin
      - OPENSENTRY_SECRET=please-change-me
      - OPENSENTRY_LOG_LEVEL=INFO
      - OPENSENTRY_PORT=${OPENSENTRY_PORT:-5000}
      - GUNICORN_WORKERS=1
      - GUNICORN_TIMEOUT=60
      # Thread caps to reduce CPU contention inside container
      - OMP_NUM_THREADS=1
      - OPENBLAS_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - NUMEXPR_NUM_THREADS=1
      # Camera hints for compatibility; adjust if needed
      - OPENSENTRY_CAMERA_MJPEG=1
      # - OPENSENTRY_CAMERA_WIDTH=640
      # - OPENSENTRY_CAMERA_HEIGHT=480
      # Use placeholder frames if no camera is available
      # - OPENSENTRY_ALLOW_PLACEHOLDER=1
      # OpenCV thread configuration for ARM stability
      - OPENCV_VIDEOIO_PRIORITY_LIST=V4L2
      - OPENCV_VIDEOIO_DEBUG=1
    volumes:
      - /dev:/dev
    devices:
      - /dev/video0:/dev/video0
    # - /dev/video1:/dev/video1
    group_add:
      - video
    device_cgroup_rules:
      - 'c 81:* rmw'
    security_opt:
      - seccomp:unconfined
    restart: unless-stopped
    # privileged: true            # only if needed for camera access (try without first)
